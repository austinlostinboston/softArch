import java.sql.*;
import java.util.*;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.awt.Color;

/*
 * Login.java
 *
 * Created on Mar 12, 2015, 12:45:18 AM
 */

/**
 *
 * @author austinankney
 */
public class Login extends javax.swing.JFrame {
    private static String username = null;
    private static char[] password = null;
    private static char[] returnPass = null;

    /** Creates new form Login */
    public Login() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter Username:");

        jLabel2.setText("Enter Password:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Welcome to the combined EEP/LeafTech System");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(55, 55, 55)
                        .add(jLabel3))
                    .add(layout.createSequentialGroup()
                        .add(116, 116, 116)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(5, 5, 5)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(jLabel1)
                                    .add(jLabel2))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jTextField1)
                                    .add(jPasswordField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 155, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 284, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(125, 125, 125)
                        .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jLabel3)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jPasswordField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(8, 8, 8)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.getAccessibleContext().setAccessibleName("jButton2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        username = jTextField1.getText();
        password = jPasswordField1.getPassword();
        Color darkGreen = new Color(0,153,0);
        DateFormat dt = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");

        System.out.println(username + " " + password);


        
        // jButton1 is responsible for querying the inventory database and
        // getting the tree inventory. Once retieved, the tree inventory is
        // displayed in jTextArea1. From here the user can select an inventory
        // item by triple clicking the item.

        // Database parameters
        Boolean connectError = false;       // Error flag
        Connection DBConn = null;           // MySQL connection handle
        String errString = null;            // String for displaying errors
        String msgString = null;            // String for displaying non-error messages
        ResultSet res = null;               // SQL query result set pointer
        Statement s = null;                 // SQL statement pointer

        // Connect to the username database and retrieve username's password
        try
        {
            //define the data source
            String sourceURL = "jdbc:mysql://localhost:3306/login";

            System.out.println("Establishing connection with: " + sourceURL);

            DBConn = DriverManager.getConnection(sourceURL,"remote","remote_pass");

        } catch (Exception e) {

            errString =  "\nProblem connecting to database:: " + e;
            System.out.println(errString);
            connectError = true;

        }

        if (!connectError) {
            System.out.println("Successfully connected to database");

            try
            {
                s = DBConn.createStatement();

                res = s.executeQuery( "SELECT password FROM auth WHERE username = \"" + username + "\";");

                while (res.next()) {
                    String tempPass = res.getString(1);
                    returnPass = tempPass.toCharArray();
                }

                if (Arrays.equals(password,returnPass)) {
                    System.out.println("Logging in...");
                    jLabel4.setForeground(darkGreen);
                    jLabel4.setText("Logging in...");

//                    String DateloginDateTime = LocalDateTime.now();
//                    // create login_timestamp
//                    Calendar rightNow = Calendar.getInstance();
//
//                    int LoginHour = dt.format(rightNow.get(rightNow.HOUR_OF_DAY));
//                    int LoginMinute = rightNow.get(rightNow.MINUTE);
//                    int LoginSecond = rightNow.get(rightNow.SECOND);
//                    int LoginDay = rightNow.get(rightNow.DAY_OF_WEEK);
//                    int LoginMonth = rightNow.get(rightNow.MONTH);
//                    int LoginYear = rightNow.get(rightNow.YEAR);
//
//                    String loginDateTime = LoginMonth + "/" + LoginDay + "/" + LoginYear + " "
//                    + LoginHour + ":" + LoginMinute  + ":" + LoginSecond;
                    java.util.Date date = new java.util.Date();
                    String loginDateTime = dt.format(date);

                    try {
                    String addLoginRecord = "INSERT into record VALUES (\"" + username + "\",\"" + loginDateTime + "\",\"null\")";
                    int executeUpdateVal = s.executeUpdate(addLoginRecord);
                    } catch (Exception e) {
                        errString =  "\nProblem getting tree inventory:: " + e;
                        System.out.println(errString);
                    }
                    System.out.println("login/out records added to databases.");
                } else {
                    System.out.println("Wrong credentials");
                    jLabel4.setForeground(Color.red);
                    jLabel4.setText("Entered wrong username or password");
                }


            } catch (Exception e) {

                errString =  "\nProblem getting tree inventory:: " + e;
                System.out.println(errString);

            } // end try-catch
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
